
package com.company;

import java.io.*;
import java.lang.*;
import java.util.LinkedList;
import java.util.Map;
import java.util.Queue;
import java.util.Scanner;

public class Main {

    public static void main(String[] args) {

        abc tree =new abc();
        tree.add(6);
        tree.add(4);
        tree.add(8);
        tree.add(3);
        tree.add(5);
        tree.add(7);
        tree.add(9);
        tree.leveltraverse();
    }
}
class node{
    int data;
    node left ;
    node right;

    public node(int data) {
        this.data = data;
        this.left=null;
        this.right=null;
    }
}
class abc{
    public node root =null;
    public node addrecursive(node current , int value){
        if(current==null){
            return new node(value);
        }
        if(value< current.data){
            current.left=addrecursive(current.left, value);
        }
        else if (value> current.data){
            current.right=addrecursive(current.right,value);
        }
        else {
            return current;
        }
        return current;
    }
    public void add(int value){
        root =addrecursive(root,value);
    }
   public void leveltraverse(){
        if(root==null){
            return;
        }
        Queue<node>nodes =new LinkedList<>();
        nodes.add(root);
        while (!nodes.isEmpty()){
            node node =nodes.remove();
            System.out.print(" "+node.data);
            if(node.left!=null){
                nodes.add(node.left);
            }
            if(node.right!=null){
                nodes.add(node.right);
            }
        }
   }
}
